{
  "version": 3,
  "sources": ["../../node_modules/@thirdweb-dev/insight/src/client/core/bodySerializer.ts", "../../node_modules/@thirdweb-dev/insight/src/client/core/params.ts", "../../node_modules/@thirdweb-dev/insight/src/client/core/auth.ts", "../../node_modules/@thirdweb-dev/insight/src/client/core/pathSerializer.ts", "../../node_modules/@thirdweb-dev/insight/src/client/client/utils.ts", "../../node_modules/@thirdweb-dev/insight/src/client/client/client.ts", "../../node_modules/@thirdweb-dev/insight/src/client/client.gen.ts", "../../node_modules/@thirdweb-dev/insight/src/client/sdk.gen.ts", "../../node_modules/@thirdweb-dev/insight/src/configure.ts"],
  "sourcesContent": ["import type {\n  ArrayStyle,\n  ObjectStyle,\n  SerializerOptions,\n} from \"./pathSerializer.js\";\n\nexport type QuerySerializer = (query: Record<string, unknown>) => string;\n\nexport type BodySerializer = (body: any) => any;\n\nexport interface QuerySerializerOptions {\n  allowReserved?: boolean;\n  array?: SerializerOptions<ArrayStyle>;\n  object?: SerializerOptions<ObjectStyle>;\n}\n\nconst serializeFormDataPair = (data: FormData, key: string, value: unknown) => {\n  if (typeof value === \"string\" || value instanceof Blob) {\n    data.append(key, value);\n  } else {\n    data.append(key, JSON.stringify(value));\n  }\n};\n\nconst serializeUrlSearchParamsPair = (\n  data: URLSearchParams,\n  key: string,\n  value: unknown,\n) => {\n  if (typeof value === \"string\") {\n    data.append(key, value);\n  } else {\n    data.append(key, JSON.stringify(value));\n  }\n};\n\nexport const formDataBodySerializer = {\n  bodySerializer: <T extends Record<string, any> | Array<Record<string, any>>>(\n    body: T,\n  ) => {\n    const data = new FormData();\n\n    Object.entries(body).forEach(([key, value]) => {\n      if (value === undefined || value === null) {\n        return;\n      }\n      if (Array.isArray(value)) {\n        value.forEach((v) => serializeFormDataPair(data, key, v));\n      } else {\n        serializeFormDataPair(data, key, value);\n      }\n    });\n\n    return data;\n  },\n};\n\nexport const jsonBodySerializer = {\n  bodySerializer: <T>(body: T) =>\n    JSON.stringify(body, (_key, value) =>\n      typeof value === \"bigint\" ? value.toString() : value,\n    ),\n};\n\nexport const urlSearchParamsBodySerializer = {\n  bodySerializer: <T extends Record<string, any> | Array<Record<string, any>>>(\n    body: T,\n  ) => {\n    const data = new URLSearchParams();\n\n    Object.entries(body).forEach(([key, value]) => {\n      if (value === undefined || value === null) {\n        return;\n      }\n      if (Array.isArray(value)) {\n        value.forEach((v) => serializeUrlSearchParamsPair(data, key, v));\n      } else {\n        serializeUrlSearchParamsPair(data, key, value);\n      }\n    });\n\n    return data.toString();\n  },\n};\n", "type Slot = \"body\" | \"headers\" | \"path\" | \"query\";\n\nexport type Field =\n  | {\n      in: Exclude<Slot, \"body\">;\n      key: string;\n      map?: string;\n    }\n  | {\n      in: Extract<Slot, \"body\">;\n      key?: string;\n      map?: string;\n    };\n\nexport interface Fields {\n  allowExtra?: Partial<Record<Slot, boolean>>;\n  args?: ReadonlyArray<Field>;\n}\n\nexport type FieldsConfig = ReadonlyArray<Field | Fields>;\n\nconst extraPrefixesMap: Record<string, Slot> = {\n  $body_: \"body\",\n  $headers_: \"headers\",\n  $path_: \"path\",\n  $query_: \"query\",\n};\nconst extraPrefixes = Object.entries(extraPrefixesMap);\n\ntype KeyMap = Map<\n  string,\n  {\n    in: Slot;\n    map?: string;\n  }\n>;\n\nconst buildKeyMap = (fields: FieldsConfig, map?: KeyMap): KeyMap => {\n  if (!map) {\n    map = new Map();\n  }\n\n  for (const config of fields) {\n    if (\"in\" in config) {\n      if (config.key) {\n        map.set(config.key, {\n          in: config.in,\n          map: config.map,\n        });\n      }\n    } else if (config.args) {\n      buildKeyMap(config.args, map);\n    }\n  }\n\n  return map;\n};\n\ninterface Params {\n  body: unknown;\n  headers: Record<string, unknown>;\n  path: Record<string, unknown>;\n  query: Record<string, unknown>;\n}\n\nconst stripEmptySlots = (params: Params) => {\n  for (const [slot, value] of Object.entries(params)) {\n    if (value && typeof value === \"object\" && !Object.keys(value).length) {\n      delete params[slot as Slot];\n    }\n  }\n};\n\nexport const buildClientParams = (\n  args: ReadonlyArray<unknown>,\n  fields: FieldsConfig,\n) => {\n  const params: Params = {\n    body: {},\n    headers: {},\n    path: {},\n    query: {},\n  };\n\n  const map = buildKeyMap(fields);\n\n  let config: FieldsConfig[number] | undefined;\n\n  for (const [index, arg] of args.entries()) {\n    if (fields[index]) {\n      config = fields[index];\n    }\n\n    if (!config) {\n      continue;\n    }\n\n    if (\"in\" in config) {\n      if (config.key) {\n        const field = map.get(config.key)!;\n        const name = field.map || config.key;\n        (params[field.in] as Record<string, unknown>)[name] = arg;\n      } else {\n        params.body = arg;\n      }\n    } else {\n      for (const [key, value] of Object.entries(arg ?? {})) {\n        const field = map.get(key);\n\n        if (field) {\n          const name = field.map || key;\n          (params[field.in] as Record<string, unknown>)[name] = value;\n        } else {\n          const extra = extraPrefixes.find(([prefix]) =>\n            key.startsWith(prefix),\n          );\n\n          if (extra) {\n            const [prefix, slot] = extra;\n            (params[slot] as Record<string, unknown>)[\n              key.slice(prefix.length)\n            ] = value;\n          } else {\n            for (const [slot, allowed] of Object.entries(\n              config.allowExtra ?? {},\n            )) {\n              if (allowed) {\n                (params[slot as Slot] as Record<string, unknown>)[key] = value;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  stripEmptySlots(params);\n\n  return params;\n};\n", "export type AuthToken = string | undefined;\n\nexport interface Auth {\n  /**\n   * Which part of the request do we use to send the auth?\n   *\n   * @default 'header'\n   */\n  in?: \"header\" | \"query\" | \"cookie\";\n  /**\n   * Header or query parameter name.\n   *\n   * @default 'Authorization'\n   */\n  name?: string;\n  scheme?: \"basic\" | \"bearer\";\n  type: \"apiKey\" | \"http\";\n}\n\nexport const getAuthToken = async (\n  auth: Auth,\n  callback: ((auth: Auth) => Promise<AuthToken> | AuthToken) | AuthToken,\n): Promise<string | undefined> => {\n  const token =\n    typeof callback === \"function\" ? await callback(auth) : callback;\n\n  if (!token) {\n    return;\n  }\n\n  if (auth.scheme === \"bearer\") {\n    return `Bearer ${token}`;\n  }\n\n  if (auth.scheme === \"basic\") {\n    return `Basic ${btoa(token)}`;\n  }\n\n  return token;\n};\n", "interface SerializeOptions<T>\n  extends SerializePrimitiveOptions,\n    SerializerOptions<T> {}\n\ninterface SerializePrimitiveOptions {\n  allowReserved?: boolean;\n  name: string;\n}\n\nexport interface SerializerOptions<T> {\n  /**\n   * @default true\n   */\n  explode: boolean;\n  style: T;\n}\n\nexport type ArrayStyle = \"form\" | \"spaceDelimited\" | \"pipeDelimited\";\nexport type ArraySeparatorStyle = ArrayStyle | MatrixStyle;\ntype MatrixStyle = \"label\" | \"matrix\" | \"simple\";\nexport type ObjectStyle = \"form\" | \"deepObject\";\ntype ObjectSeparatorStyle = ObjectStyle | MatrixStyle;\n\ninterface SerializePrimitiveParam extends SerializePrimitiveOptions {\n  value: string;\n}\n\nexport const separatorArrayExplode = (style: ArraySeparatorStyle) => {\n  switch (style) {\n    case \"label\":\n      return \".\";\n    case \"matrix\":\n      return \";\";\n    case \"simple\":\n      return \",\";\n    default:\n      return \"&\";\n  }\n};\n\nexport const separatorArrayNoExplode = (style: ArraySeparatorStyle) => {\n  switch (style) {\n    case \"form\":\n      return \",\";\n    case \"pipeDelimited\":\n      return \"|\";\n    case \"spaceDelimited\":\n      return \"%20\";\n    default:\n      return \",\";\n  }\n};\n\nexport const separatorObjectExplode = (style: ObjectSeparatorStyle) => {\n  switch (style) {\n    case \"label\":\n      return \".\";\n    case \"matrix\":\n      return \";\";\n    case \"simple\":\n      return \",\";\n    default:\n      return \"&\";\n  }\n};\n\nexport const serializeArrayParam = ({\n  allowReserved,\n  explode,\n  name,\n  style,\n  value,\n}: SerializeOptions<ArraySeparatorStyle> & {\n  value: unknown[];\n}) => {\n  if (!explode) {\n    const joinedValues = (\n      allowReserved ? value : value.map((v) => encodeURIComponent(v as string))\n    ).join(separatorArrayNoExplode(style));\n    switch (style) {\n      case \"label\":\n        return `.${joinedValues}`;\n      case \"matrix\":\n        return `;${name}=${joinedValues}`;\n      case \"simple\":\n        return joinedValues;\n      default:\n        return `${name}=${joinedValues}`;\n    }\n  }\n\n  const separator = separatorArrayExplode(style);\n  const joinedValues = value\n    .map((v) => {\n      if (style === \"label\" || style === \"simple\") {\n        return allowReserved ? v : encodeURIComponent(v as string);\n      }\n\n      return serializePrimitiveParam({\n        allowReserved,\n        name,\n        value: v as string,\n      });\n    })\n    .join(separator);\n  return style === \"label\" || style === \"matrix\"\n    ? separator + joinedValues\n    : joinedValues;\n};\n\nexport const serializePrimitiveParam = ({\n  allowReserved,\n  name,\n  value,\n}: SerializePrimitiveParam) => {\n  if (value === undefined || value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"object\") {\n    throw new Error(\n      \"Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.\",\n    );\n  }\n\n  return `${name}=${allowReserved ? value : encodeURIComponent(value)}`;\n};\n\nexport const serializeObjectParam = ({\n  allowReserved,\n  explode,\n  name,\n  style,\n  value,\n  valueOnly,\n}: SerializeOptions<ObjectSeparatorStyle> & {\n  value: Record<string, unknown> | Date;\n  valueOnly?: boolean;\n}) => {\n  if (value instanceof Date) {\n    return valueOnly ? value.toISOString() : `${name}=${value.toISOString()}`;\n  }\n\n  if (style !== \"deepObject\" && !explode) {\n    let values: string[] = [];\n    Object.entries(value).forEach(([key, v]) => {\n      values = [\n        ...values,\n        key,\n        allowReserved ? (v as string) : encodeURIComponent(v as string),\n      ];\n    });\n    const joinedValues = values.join(\",\");\n    switch (style) {\n      case \"form\":\n        return `${name}=${joinedValues}`;\n      case \"label\":\n        return `.${joinedValues}`;\n      case \"matrix\":\n        return `;${name}=${joinedValues}`;\n      default:\n        return joinedValues;\n    }\n  }\n\n  const separator = separatorObjectExplode(style);\n  const joinedValues = Object.entries(value)\n    .map(([key, v]) =>\n      serializePrimitiveParam({\n        allowReserved,\n        name: style === \"deepObject\" ? `${name}[${key}]` : key,\n        value: v as string,\n      }),\n    )\n    .join(separator);\n  return style === \"label\" || style === \"matrix\"\n    ? separator + joinedValues\n    : joinedValues;\n};\n", "import { getAuthToken } from \"../core/auth.js\";\nimport type {\n  QuerySerializer,\n  QuerySerializerOptions,\n} from \"../core/bodySerializer.js\";\nimport { jsonBodySerializer } from \"../core/bodySerializer.js\";\nimport {\n  serializeArrayParam,\n  serializeObjectParam,\n  serializePrimitiveParam,\n} from \"../core/pathSerializer.js\";\nimport type { Client, ClientOptions, Config, RequestOptions } from \"./types.js\";\n\ninterface PathSerializer {\n  path: Record<string, unknown>;\n  url: string;\n}\n\nconst PATH_PARAM_RE = /\\{[^{}]+\\}/g;\n\ntype ArrayStyle = \"form\" | \"spaceDelimited\" | \"pipeDelimited\";\ntype MatrixStyle = \"label\" | \"matrix\" | \"simple\";\ntype ArraySeparatorStyle = ArrayStyle | MatrixStyle;\n\nconst defaultPathSerializer = ({ path, url: _url }: PathSerializer) => {\n  let url = _url;\n  const matches = _url.match(PATH_PARAM_RE);\n  if (matches) {\n    for (const match of matches) {\n      let explode = false;\n      let name = match.substring(1, match.length - 1);\n      let style: ArraySeparatorStyle = \"simple\";\n\n      if (name.endsWith(\"*\")) {\n        explode = true;\n        name = name.substring(0, name.length - 1);\n      }\n\n      if (name.startsWith(\".\")) {\n        name = name.substring(1);\n        style = \"label\";\n      } else if (name.startsWith(\";\")) {\n        name = name.substring(1);\n        style = \"matrix\";\n      }\n\n      const value = path[name];\n\n      if (value === undefined || value === null) {\n        continue;\n      }\n\n      if (Array.isArray(value)) {\n        url = url.replace(\n          match,\n          serializeArrayParam({ explode, name, style, value }),\n        );\n        continue;\n      }\n\n      if (typeof value === \"object\") {\n        url = url.replace(\n          match,\n          serializeObjectParam({\n            explode,\n            name,\n            style,\n            value: value as Record<string, unknown>,\n            valueOnly: true,\n          }),\n        );\n        continue;\n      }\n\n      if (style === \"matrix\") {\n        url = url.replace(\n          match,\n          `;${serializePrimitiveParam({\n            name,\n            value: value as string,\n          })}`,\n        );\n        continue;\n      }\n\n      const replaceValue = encodeURIComponent(\n        style === \"label\" ? `.${value as string}` : (value as string),\n      );\n      url = url.replace(match, replaceValue);\n    }\n  }\n  return url;\n};\n\nexport const createQuerySerializer = <T = unknown>({\n  allowReserved,\n  array,\n  object,\n}: QuerySerializerOptions = {}) => {\n  const querySerializer = (queryParams: T) => {\n    const search: string[] = [];\n    if (queryParams && typeof queryParams === \"object\") {\n      for (const name in queryParams) {\n        const value = queryParams[name];\n\n        if (value === undefined || value === null) {\n          continue;\n        }\n\n        if (Array.isArray(value)) {\n          const serializedArray = serializeArrayParam({\n            allowReserved,\n            explode: true,\n            name,\n            style: \"form\",\n            value,\n            ...array,\n          });\n          if (serializedArray) search.push(serializedArray);\n        } else if (typeof value === \"object\") {\n          const serializedObject = serializeObjectParam({\n            allowReserved,\n            explode: true,\n            name,\n            style: \"deepObject\",\n            value: value as Record<string, unknown>,\n            ...object,\n          });\n          if (serializedObject) search.push(serializedObject);\n        } else {\n          const serializedPrimitive = serializePrimitiveParam({\n            allowReserved,\n            name,\n            value: value as string,\n          });\n          if (serializedPrimitive) search.push(serializedPrimitive);\n        }\n      }\n    }\n    return search.join(\"&\");\n  };\n  return querySerializer;\n};\n\n/**\n * Infers parseAs value from provided Content-Type header.\n */\nexport const getParseAs = (\n  contentType: string | null,\n): Exclude<Config[\"parseAs\"], \"auto\"> => {\n  if (!contentType) {\n    // If no Content-Type header is provided, the best we can do is return the raw response body,\n    // which is effectively the same as the 'stream' option.\n    return \"stream\";\n  }\n\n  const cleanContent = contentType.split(\";\")[0]?.trim();\n\n  if (!cleanContent) {\n    return;\n  }\n\n  if (\n    cleanContent.startsWith(\"application/json\") ||\n    cleanContent.endsWith(\"+json\")\n  ) {\n    return \"json\";\n  }\n\n  if (cleanContent === \"multipart/form-data\") {\n    return \"formData\";\n  }\n\n  if (\n    [\"application/\", \"audio/\", \"image/\", \"video/\"].some((type) =>\n      cleanContent.startsWith(type),\n    )\n  ) {\n    return \"blob\";\n  }\n\n  if (cleanContent.startsWith(\"text/\")) {\n    return \"text\";\n  }\n\n  return;\n};\n\nexport const setAuthParams = async ({\n  security,\n  ...options\n}: Pick<Required<RequestOptions>, \"security\"> &\n  Pick<RequestOptions, \"auth\" | \"query\"> & {\n    headers: Headers;\n  }) => {\n  for (const auth of security) {\n    const token = await getAuthToken(auth, options.auth);\n\n    if (!token) {\n      continue;\n    }\n\n    const name = auth.name ?? \"Authorization\";\n\n    switch (auth.in) {\n      case \"query\":\n        if (!options.query) {\n          options.query = {};\n        }\n        options.query[name] = token;\n        break;\n      case \"cookie\":\n        options.headers.append(\"Cookie\", `${name}=${token}`);\n        break;\n      default:\n        options.headers.set(name, token);\n        break;\n    }\n\n    return;\n  }\n};\n\nexport const buildUrl: Client[\"buildUrl\"] = (options) => {\n  const url = getUrl({\n    baseUrl: options.baseUrl as string,\n    path: options.path,\n    query: options.query,\n    querySerializer:\n      typeof options.querySerializer === \"function\"\n        ? options.querySerializer\n        : createQuerySerializer(options.querySerializer),\n    url: options.url,\n  });\n  return url;\n};\n\nexport const getUrl = ({\n  baseUrl,\n  path,\n  query,\n  querySerializer,\n  url: _url,\n}: {\n  baseUrl?: string;\n  path?: Record<string, unknown>;\n  query?: Record<string, unknown>;\n  querySerializer: QuerySerializer;\n  url: string;\n}) => {\n  const pathUrl = _url.startsWith(\"/\") ? _url : `/${_url}`;\n  let url = (baseUrl ?? \"\") + pathUrl;\n  if (path) {\n    url = defaultPathSerializer({ path, url });\n  }\n  let search = query ? querySerializer(query) : \"\";\n  if (search.startsWith(\"?\")) {\n    search = search.substring(1);\n  }\n  if (search) {\n    url += `?${search}`;\n  }\n  return url;\n};\n\nexport const mergeConfigs = (a: Config, b: Config): Config => {\n  const config = { ...a, ...b };\n  if (config.baseUrl?.endsWith(\"/\")) {\n    config.baseUrl = config.baseUrl.substring(0, config.baseUrl.length - 1);\n  }\n  config.headers = mergeHeaders(a.headers, b.headers);\n  return config;\n};\n\nexport const mergeHeaders = (\n  ...headers: Array<Required<Config>[\"headers\"] | undefined>\n): Headers => {\n  const mergedHeaders = new Headers();\n  for (const header of headers) {\n    if (!header || typeof header !== \"object\") {\n      continue;\n    }\n\n    const iterator =\n      header instanceof Headers ? header.entries() : Object.entries(header);\n\n    for (const [key, value] of iterator) {\n      if (value === null) {\n        mergedHeaders.delete(key);\n      } else if (Array.isArray(value)) {\n        for (const v of value) {\n          mergedHeaders.append(key, v as string);\n        }\n      } else if (value !== undefined) {\n        // assume object headers are meant to be JSON stringified, i.e. their\n        // content value in OpenAPI specification is 'application/json'\n        mergedHeaders.set(\n          key,\n          typeof value === \"object\" ? JSON.stringify(value) : (value as string),\n        );\n      }\n    }\n  }\n  return mergedHeaders;\n};\n\ntype ErrInterceptor<Err, Res, Req, Options> = (\n  error: Err,\n  response: Res,\n  request: Req,\n  options: Options,\n) => Err | Promise<Err>;\n\ntype ReqInterceptor<Req, Options> = (\n  request: Req,\n  options: Options,\n) => Req | Promise<Req>;\n\ntype ResInterceptor<Res, Req, Options> = (\n  response: Res,\n  request: Req,\n  options: Options,\n) => Res | Promise<Res>;\n\nclass Interceptors<Interceptor> {\n  _fns: (Interceptor | null)[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  clear() {\n    this._fns = [];\n  }\n\n  getInterceptorIndex(id: number | Interceptor): number {\n    if (typeof id === \"number\") {\n      return this._fns[id] ? id : -1;\n    } else {\n      return this._fns.indexOf(id);\n    }\n  }\n  exists(id: number | Interceptor) {\n    const index = this.getInterceptorIndex(id);\n    return !!this._fns[index];\n  }\n\n  eject(id: number | Interceptor) {\n    const index = this.getInterceptorIndex(id);\n    if (this._fns[index]) {\n      this._fns[index] = null;\n    }\n  }\n\n  update(id: number | Interceptor, fn: Interceptor) {\n    const index = this.getInterceptorIndex(id);\n    if (this._fns[index]) {\n      this._fns[index] = fn;\n      return id;\n    } else {\n      return false;\n    }\n  }\n\n  use(fn: Interceptor) {\n    this._fns = [...this._fns, fn];\n    return this._fns.length - 1;\n  }\n}\n\n// `createInterceptors()` response, meant for external use as it does not\n// expose internals\nexport interface Middleware<Req, Res, Err, Options> {\n  error: Pick<\n    Interceptors<ErrInterceptor<Err, Res, Req, Options>>,\n    \"eject\" | \"use\"\n  >;\n  request: Pick<Interceptors<ReqInterceptor<Req, Options>>, \"eject\" | \"use\">;\n  response: Pick<\n    Interceptors<ResInterceptor<Res, Req, Options>>,\n    \"eject\" | \"use\"\n  >;\n}\n\n// do not add `Middleware` as return type so we can use _fns internally\nexport const createInterceptors = <Req, Res, Err, Options>() => ({\n  error: new Interceptors<ErrInterceptor<Err, Res, Req, Options>>(),\n  request: new Interceptors<ReqInterceptor<Req, Options>>(),\n  response: new Interceptors<ResInterceptor<Res, Req, Options>>(),\n});\n\nconst defaultQuerySerializer = createQuerySerializer({\n  allowReserved: false,\n  array: {\n    explode: true,\n    style: \"form\",\n  },\n  object: {\n    explode: true,\n    style: \"deepObject\",\n  },\n});\n\nconst defaultHeaders = {\n  \"Content-Type\": \"application/json\",\n};\n\nexport const createConfig = <T extends ClientOptions = ClientOptions>(\n  override: Config<Omit<ClientOptions, keyof T> & T> = {},\n): Config<Omit<ClientOptions, keyof T> & T> => ({\n  ...jsonBodySerializer,\n  headers: defaultHeaders,\n  parseAs: \"auto\",\n  querySerializer: defaultQuerySerializer,\n  ...override,\n});\n", "import type { Client, Config, RequestOptions } from \"./types.js\";\nimport {\n  buildUrl,\n  createConfig,\n  createInterceptors,\n  getParseAs,\n  mergeConfigs,\n  mergeHeaders,\n  setAuthParams,\n} from \"./utils.js\";\n\ntype ReqInit = Omit<RequestInit, \"body\" | \"headers\"> & {\n  body?: any;\n  headers: ReturnType<typeof mergeHeaders>;\n};\n\nexport const createClient = (config: Config = {}): Client => {\n  let _config = mergeConfigs(createConfig(), config);\n\n  const getConfig = (): Config => ({ ..._config });\n\n  const setConfig = (config: Config): Config => {\n    _config = mergeConfigs(_config, config);\n    return getConfig();\n  };\n\n  const interceptors = createInterceptors<\n    Request,\n    Response,\n    unknown,\n    RequestOptions\n  >();\n\n  const request: Client[\"request\"] = async (options) => {\n    const opts = {\n      ..._config,\n      ...options,\n      fetch: options.fetch ?? _config.fetch ?? globalThis.fetch,\n      headers: mergeHeaders(_config.headers, options.headers),\n    };\n\n    if (opts.security) {\n      await setAuthParams({\n        ...opts,\n        security: opts.security,\n      });\n    }\n\n    if (opts.body && opts.bodySerializer) {\n      opts.body = opts.bodySerializer(opts.body);\n    }\n\n    // remove Content-Type header if body is empty to avoid sending invalid requests\n    if (opts.body === undefined || opts.body === \"\") {\n      opts.headers.delete(\"Content-Type\");\n    }\n\n    const url = buildUrl(opts);\n    const requestInit: ReqInit = {\n      redirect: \"follow\",\n      ...opts,\n    };\n\n    let request = new Request(url, requestInit);\n\n    for (const fn of interceptors.request._fns) {\n      if (fn) {\n        request = await fn(request, opts);\n      }\n    }\n\n    // fetch must be assigned here, otherwise it would throw the error:\n    // TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\n    const _fetch = opts.fetch!;\n    let response = await _fetch(request);\n\n    for (const fn of interceptors.response._fns) {\n      if (fn) {\n        response = await fn(response, request, opts);\n      }\n    }\n\n    const result = {\n      request,\n      response,\n    };\n\n    if (response.ok) {\n      if (\n        response.status === 204 ||\n        response.headers.get(\"Content-Length\") === \"0\"\n      ) {\n        return opts.responseStyle === \"data\"\n          ? {}\n          : {\n              data: {},\n              ...result,\n            };\n      }\n\n      const parseAs =\n        (opts.parseAs === \"auto\"\n          ? getParseAs(response.headers.get(\"Content-Type\"))\n          : opts.parseAs) ?? \"json\";\n\n      let data: any;\n      switch (parseAs) {\n        case \"arrayBuffer\":\n        case \"blob\":\n        case \"formData\":\n        case \"json\":\n        case \"text\":\n          data = await response[parseAs]();\n          break;\n        case \"stream\":\n          return opts.responseStyle === \"data\"\n            ? response.body\n            : {\n                data: response.body,\n                ...result,\n              };\n      }\n\n      if (parseAs === \"json\") {\n        if (opts.responseValidator) {\n          await opts.responseValidator(data);\n        }\n\n        if (opts.responseTransformer) {\n          data = await opts.responseTransformer(data);\n        }\n      }\n\n      return opts.responseStyle === \"data\"\n        ? data\n        : {\n            data,\n            ...result,\n          };\n    }\n\n    let error = await response.text();\n\n    try {\n      error = JSON.parse(error);\n    } catch {\n      // noop\n    }\n\n    let finalError = error;\n\n    for (const fn of interceptors.error._fns) {\n      if (fn) {\n        finalError = (await fn(error, response, request, opts)) as string;\n      }\n    }\n\n    finalError = finalError || ({} as string);\n\n    if (opts.throwOnError) {\n      throw finalError;\n    }\n\n    // TODO: we probably want to return error and improve types\n    return opts.responseStyle === \"data\"\n      ? undefined\n      : {\n          error: finalError,\n          ...result,\n        };\n  };\n\n  return {\n    buildUrl,\n    connect: (options) => request({ ...options, method: \"CONNECT\" }),\n    delete: (options) => request({ ...options, method: \"DELETE\" }),\n    get: (options) => request({ ...options, method: \"GET\" }),\n    getConfig,\n    head: (options) => request({ ...options, method: \"HEAD\" }),\n    interceptors,\n    options: (options) => request({ ...options, method: \"OPTIONS\" }),\n    patch: (options) => request({ ...options, method: \"PATCH\" }),\n    post: (options) => request({ ...options, method: \"POST\" }),\n    put: (options) => request({ ...options, method: \"PUT\" }),\n    request,\n    setConfig,\n    trace: (options) => request({ ...options, method: \"TRACE\" }),\n  };\n};\n", "// This file is auto-generated by @hey-api/openapi-ts\n\nimport {\n  type Config,\n  createClient,\n  createConfig,\n  type ClientOptions as DefaultClientOptions,\n} from \"./client/index.js\";\nimport type { ClientOptions } from \"./types.gen.js\";\n\n/**\n * The `createClientConfig()` function will be called on client initialization\n * and the returned object will become the client's initial configuration.\n *\n * You may want to initialize your client this way instead of calling\n * `setConfig()`. This is useful for example if you're using Next.js\n * to ensure your client always has the correct values.\n */\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> =\n  (\n    override?: Config<DefaultClientOptions & T>,\n  ) => Config<Required<DefaultClientOptions> & T>;\n\nexport const client = createClient(createConfig<ClientOptions>());\n", "// This file is auto-generated by @hey-api/openapi-ts\n\nimport type {\n  Client,\n  Options as ClientOptions,\n  TDataShape,\n} from \"./client/index.js\";\nimport { client as _heyApiClient } from \"./client.gen.js\";\nimport type {\n  DeleteV1WebhooksByWebhookIdData,\n  DeleteV1WebhooksByWebhookIdErrors,\n  DeleteV1WebhooksByWebhookIdResponses,\n  GetV1BlocksData,\n  GetV1BlocksErrors,\n  GetV1BlocksResponses,\n  GetV1ContractsAbiByContractAddressData,\n  GetV1ContractsAbiByContractAddressErrors,\n  GetV1ContractsAbiByContractAddressResponses,\n  GetV1ContractsMetadataByContractAddressData,\n  GetV1ContractsMetadataByContractAddressErrors,\n  GetV1ContractsMetadataByContractAddressResponses,\n  GetV1EventsByContractAddressBySignatureData,\n  GetV1EventsByContractAddressBySignatureErrors,\n  GetV1EventsByContractAddressBySignatureResponses,\n  GetV1EventsByContractAddressData,\n  GetV1EventsByContractAddressErrors,\n  GetV1EventsByContractAddressResponses,\n  GetV1EventsData,\n  GetV1EventsErrors,\n  GetV1EventsResponses,\n  GetV1NftsBalanceByOwnerAddressData,\n  GetV1NftsBalanceByOwnerAddressErrors,\n  GetV1NftsBalanceByOwnerAddressResponses,\n  GetV1NftsByContractAddressByTokenIdData,\n  GetV1NftsByContractAddressByTokenIdErrors,\n  GetV1NftsByContractAddressByTokenIdResponses,\n  GetV1NftsByContractAddressData,\n  GetV1NftsByContractAddressErrors,\n  GetV1NftsByContractAddressResponses,\n  GetV1NftsCollectionsByContractAddressData,\n  GetV1NftsCollectionsByContractAddressErrors,\n  GetV1NftsCollectionsByContractAddressResponses,\n  GetV1NftsData,\n  GetV1NftsErrors,\n  GetV1NftsMetadataRefreshByContractAddressByTokenIdData,\n  GetV1NftsMetadataRefreshByContractAddressByTokenIdErrors,\n  GetV1NftsMetadataRefreshByContractAddressByTokenIdResponses,\n  GetV1NftsMetadataRefreshByContractAddressData,\n  GetV1NftsMetadataRefreshByContractAddressErrors,\n  GetV1NftsMetadataRefreshByContractAddressResponses,\n  GetV1NftsOwnersByContractAddressByTokenIdData,\n  GetV1NftsOwnersByContractAddressByTokenIdErrors,\n  GetV1NftsOwnersByContractAddressByTokenIdResponses,\n  GetV1NftsOwnersByContractAddressData,\n  GetV1NftsOwnersByContractAddressErrors,\n  GetV1NftsOwnersByContractAddressResponses,\n  GetV1NftsResponses,\n  GetV1NftsTransfersByContractAddressByTokenIdData,\n  GetV1NftsTransfersByContractAddressByTokenIdErrors,\n  GetV1NftsTransfersByContractAddressByTokenIdResponses,\n  GetV1NftsTransfersByContractAddressData,\n  GetV1NftsTransfersByContractAddressErrors,\n  GetV1NftsTransfersByContractAddressResponses,\n  GetV1NftsTransfersData,\n  GetV1NftsTransfersErrors,\n  GetV1NftsTransfersResponses,\n  GetV1NftsTransfersTransactionByTransactionHashData,\n  GetV1NftsTransfersTransactionByTransactionHashErrors,\n  GetV1NftsTransfersTransactionByTransactionHashResponses,\n  GetV1ResolveByInputData,\n  GetV1ResolveByInputErrors,\n  GetV1ResolveByInputResponses,\n  GetV1TokensData,\n  GetV1TokensErc20ByOwnerAddressData,\n  GetV1TokensErc20ByOwnerAddressErrors,\n  GetV1TokensErc20ByOwnerAddressResponses,\n  GetV1TokensErc721ByOwnerAddressData,\n  GetV1TokensErc721ByOwnerAddressErrors,\n  GetV1TokensErc721ByOwnerAddressResponses,\n  GetV1TokensErc1155ByOwnerAddressData,\n  GetV1TokensErc1155ByOwnerAddressErrors,\n  GetV1TokensErc1155ByOwnerAddressResponses,\n  GetV1TokensErrors,\n  GetV1TokensLookupData,\n  GetV1TokensLookupErrors,\n  GetV1TokensLookupResponses,\n  GetV1TokensOwnersData,\n  GetV1TokensOwnersErrors,\n  GetV1TokensOwnersResponses,\n  GetV1TokensPriceData,\n  GetV1TokensPriceErrors,\n  GetV1TokensPriceResponses,\n  GetV1TokensPriceSupportedData,\n  GetV1TokensPriceSupportedErrors,\n  GetV1TokensPriceSupportedResponses,\n  GetV1TokensResponses,\n  GetV1TokensTransfersByContractAddressData,\n  GetV1TokensTransfersByContractAddressErrors,\n  GetV1TokensTransfersByContractAddressResponses,\n  GetV1TokensTransfersData,\n  GetV1TokensTransfersErrors,\n  GetV1TokensTransfersResponses,\n  GetV1TokensTransfersTransactionByTransactionHashData,\n  GetV1TokensTransfersTransactionByTransactionHashErrors,\n  GetV1TokensTransfersTransactionByTransactionHashResponses,\n  GetV1TransactionsByContractAddressBySignatureData,\n  GetV1TransactionsByContractAddressBySignatureErrors,\n  GetV1TransactionsByContractAddressBySignatureResponses,\n  GetV1TransactionsByContractAddressData,\n  GetV1TransactionsByContractAddressErrors,\n  GetV1TransactionsByContractAddressResponses,\n  GetV1TransactionsData,\n  GetV1TransactionsErrors,\n  GetV1TransactionsResponses,\n  GetV1WalletsByWalletAddressTransactionsData,\n  GetV1WalletsByWalletAddressTransactionsErrors,\n  GetV1WalletsByWalletAddressTransactionsResponses,\n  GetV1WebhooksData,\n  GetV1WebhooksErrors,\n  GetV1WebhooksResponses,\n  PatchV1WebhooksByWebhookIdData,\n  PatchV1WebhooksByWebhookIdErrors,\n  PatchV1WebhooksByWebhookIdResponses,\n  PostV1DecodeByContractAddressData,\n  PostV1DecodeByContractAddressErrors,\n  PostV1DecodeByContractAddressResponses,\n  PostV1WebhooksData,\n  PostV1WebhooksErrors,\n  PostV1WebhooksResponses,\n  PostV1WebhooksTestData,\n  PostV1WebhooksTestErrors,\n  PostV1WebhooksTestResponses,\n} from \"./types.gen.js\";\n\nexport type Options<\n  TData extends TDataShape = TDataShape,\n  ThrowOnError extends boolean = boolean,\n> = ClientOptions<TData, ThrowOnError> & {\n  /**\n   * You can provide a client instance returned by `createClient()` instead of\n   * individual options. This might be also useful if you want to implement a\n   * custom client.\n   */\n  client?: Client;\n  /**\n   * You can pass arbitrary values through the `meta` object. This can be\n   * used to access values that aren't defined as part of the SDK function.\n   */\n  meta?: Record<string, unknown>;\n};\n\n/**\n * Get webhooks\n * Get a list of webhooks or a single webhook by ID\n */\nexport const getV1Webhooks = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1WebhooksData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1WebhooksResponses,\n    GetV1WebhooksErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-secret-key\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks\",\n    ...options,\n  });\n};\n\n/**\n * Create webhook\n * Create a new webhook. In order to receive decoded data, specify a partial ABI in the filters.\n */\nexport const postV1Webhooks = <ThrowOnError extends boolean = false>(\n  options?: Options<PostV1WebhooksData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).post<\n    PostV1WebhooksResponses,\n    PostV1WebhooksErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-secret-key\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options?.headers,\n    },\n  });\n};\n\n/**\n * Delete webhook\n * Delete a webhook. This action cannot be undone.\n */\nexport const deleteV1WebhooksByWebhookId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<DeleteV1WebhooksByWebhookIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).delete<\n    DeleteV1WebhooksByWebhookIdResponses,\n    DeleteV1WebhooksByWebhookIdErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-secret-key\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/{webhook_id}\",\n    ...options,\n  });\n};\n\n/**\n * Update webhook\n * Update a webhook.\n */\nexport const patchV1WebhooksByWebhookId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<PatchV1WebhooksByWebhookIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).patch<\n    PatchV1WebhooksByWebhookIdResponses,\n    PatchV1WebhooksByWebhookIdErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-secret-key\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/{webhook_id}\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options.headers,\n    },\n  });\n};\n\n/**\n * Test webhook\n * Test your webhook URL. This will send a test event to the webhook URL signed with an example secret 'test123'. NB! The payload does not necessarily match your webhook filters. You can however use it to test signature verification and payload format handling.\n */\nexport const postV1WebhooksTest = <ThrowOnError extends boolean = false>(\n  options?: Options<PostV1WebhooksTestData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).post<\n    PostV1WebhooksTestResponses,\n    PostV1WebhooksTestErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-secret-key\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/test\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options?.headers,\n    },\n  });\n};\n\n/**\n * Get events\n * Get events\n */\nexport const getV1Events = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1EventsData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1EventsResponses,\n    GetV1EventsErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/events\",\n    ...options,\n  });\n};\n\n/**\n * Get contract events\n * Get contract events\n */\nexport const getV1EventsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1EventsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1EventsByContractAddressResponses,\n    GetV1EventsByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/events/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get contract events with specific signature\n * Get specific contract events\n */\nexport const getV1EventsByContractAddressBySignature = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1EventsByContractAddressBySignatureData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1EventsByContractAddressBySignatureResponses,\n    GetV1EventsByContractAddressBySignatureErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/events/{contractAddress}/{signature}\",\n    ...options,\n  });\n};\n\n/**\n * Get transactions\n * Get transactions\n */\nexport const getV1Transactions = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TransactionsData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TransactionsResponses,\n    GetV1TransactionsErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/transactions\",\n    ...options,\n  });\n};\n\n/**\n * Get contract transactions\n * Get contract transactions\n */\nexport const getV1TransactionsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TransactionsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TransactionsByContractAddressResponses,\n    GetV1TransactionsByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/transactions/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get contract transactions with specific signature\n * Get specific contract transactions\n */\nexport const getV1TransactionsByContractAddressBySignature = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1TransactionsByContractAddressBySignatureData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TransactionsByContractAddressBySignatureResponses,\n    GetV1TransactionsByContractAddressBySignatureErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/transactions/{contractAddress}/{signature}\",\n    ...options,\n  });\n};\n\n/**\n * Get token owners by contract\n * Get token owners for specific contract\n */\nexport const getV1TokensOwners = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1TokensOwnersData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensOwnersResponses,\n    GetV1TokensOwnersErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/owners\",\n    ...options,\n  });\n};\n\n/**\n * Get token transfers by transaction\n * Get token transfers by transaction\n */\nexport const getV1TokensTransfersTransactionByTransactionHash = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1TokensTransfersTransactionByTransactionHashData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensTransfersTransactionByTransactionHashResponses,\n    GetV1TokensTransfersTransactionByTransactionHashErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/transfers/transaction/{transaction_hash}\",\n    ...options,\n  });\n};\n\n/**\n * Get token transfers by contract\n * Get token transfers by contract\n */\nexport const getV1TokensTransfersByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensTransfersByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensTransfersByContractAddressResponses,\n    GetV1TokensTransfersByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/transfers/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get token transfers\n * Get token transfers\n */\nexport const getV1TokensTransfers = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TokensTransfersData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TokensTransfersResponses,\n    GetV1TokensTransfersErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/transfers\",\n    ...options,\n  });\n};\n\n/**\n * Get ERC-20 balances by address\n * Get ERC-20 balances for a given address. [BEING DEPRECATED IN FAVOR OF /tokens]\n * @deprecated\n */\nexport const getV1TokensErc20ByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensErc20ByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensErc20ByOwnerAddressResponses,\n    GetV1TokensErc20ByOwnerAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/erc20/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get tokens\n * Query tokens\n */\nexport const getV1Tokens = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1TokensData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensResponses,\n    GetV1TokensErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens\",\n    ...options,\n  });\n};\n\n/**\n * Get ERC-721 balances by address\n * Get ERC-721 (NFT) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n * @deprecated\n */\nexport const getV1TokensErc721ByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensErc721ByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensErc721ByOwnerAddressResponses,\n    GetV1TokensErc721ByOwnerAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/erc721/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get ERC-1155 balances by address\n * Get ERC-1155 (Multi Token) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n * @deprecated\n */\nexport const getV1TokensErc1155ByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensErc1155ByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensErc1155ByOwnerAddressResponses,\n    GetV1TokensErc1155ByOwnerAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/erc1155/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get supported tokens for price data\n * Get supported tokens for price data\n */\nexport const getV1TokensPriceSupported = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TokensPriceSupportedData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TokensPriceSupportedResponses,\n    GetV1TokensPriceSupportedErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/price/supported\",\n    ...options,\n  });\n};\n\n/**\n * Get token price\n * Get price in USD for given token(s)\n */\nexport const getV1TokensPrice = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TokensPriceData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TokensPriceResponses,\n    GetV1TokensPriceErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/price\",\n    ...options,\n  });\n};\n\n/**\n * Token lookup\n * Look up a fungible token by symbol\n */\nexport const getV1TokensLookup = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1TokensLookupData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensLookupResponses,\n    GetV1TokensLookupErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/lookup\",\n    ...options,\n  });\n};\n\n/**\n * Resolve\n * Resolve\n */\nexport const getV1ResolveByInput = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1ResolveByInputData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1ResolveByInputResponses,\n    GetV1ResolveByInputErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/resolve/{input}\",\n    ...options,\n  });\n};\n\n/**\n * Get blocks\n * Get blocks\n */\nexport const getV1Blocks = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1BlocksData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1BlocksResponses,\n    GetV1BlocksErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/blocks\",\n    ...options,\n  });\n};\n\n/**\n * Get contract ABIâ€‹\n * Get contract ABIâ€‹\n */\nexport const getV1ContractsAbiByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1ContractsAbiByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1ContractsAbiByContractAddressResponses,\n    GetV1ContractsAbiByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/contracts/abi/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get contract metadataâ€‹\n * Get contract metadataâ€‹\n */\nexport const getV1ContractsMetadataByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1ContractsMetadataByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1ContractsMetadataByContractAddressResponses,\n    GetV1ContractsMetadataByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/contracts/metadata/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Decode logs and transactionsâ€‹\n * Decode logs and transactionsâ€‹\n */\nexport const postV1DecodeByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<PostV1DecodeByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).post<\n    PostV1DecodeByContractAddressResponses,\n    PostV1DecodeByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/decode/{contractAddress}\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options.headers,\n    },\n  });\n};\n\n/**\n * Get NFT balances by address\n * Get NFT balances for a given address\n */\nexport const getV1NftsBalanceByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsBalanceByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsBalanceByOwnerAddressResponses,\n    GetV1NftsBalanceByOwnerAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/balance/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get collection\n * Retrieve metadata about a collection\n */\nexport const getV1NftsCollectionsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsCollectionsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsCollectionsByContractAddressResponses,\n    GetV1NftsCollectionsByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/collections/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFTs\n * Get NFTs\n */\nexport const getV1Nfts = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1NftsData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsResponses,\n    GetV1NftsErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT owners by contract\n * Get NFT owners by contract\n */\nexport const getV1NftsOwnersByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsOwnersByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsOwnersByContractAddressResponses,\n    GetV1NftsOwnersByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/owners/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT owners by token\n * Get NFT owners by token\n */\nexport const getV1NftsOwnersByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsOwnersByContractAddressByTokenIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsOwnersByContractAddressByTokenIdResponses,\n    GetV1NftsOwnersByContractAddressByTokenIdErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/owners/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers\n * Get NFT transfers\n */\nexport const getV1NftsTransfers = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1NftsTransfersData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1NftsTransfersResponses,\n    GetV1NftsTransfersErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by transaction\n * Get NFT transfers by transaction\n */\nexport const getV1NftsTransfersTransactionByTransactionHash = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1NftsTransfersTransactionByTransactionHashData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersTransactionByTransactionHashResponses,\n    GetV1NftsTransfersTransactionByTransactionHashErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers/transaction/{transaction_hash}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by contract\n * Get NFT transfers by contract\n */\nexport const getV1NftsTransfersByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsTransfersByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersByContractAddressResponses,\n    GetV1NftsTransfersByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFTs by contract\n * Get NFTs by contract\n */\nexport const getV1NftsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsByContractAddressResponses,\n    GetV1NftsByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by token\n * Get NFT transfers by token\n */\nexport const getV1NftsTransfersByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1NftsTransfersByContractAddressByTokenIdData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersByContractAddressByTokenIdResponses,\n    GetV1NftsTransfersByContractAddressByTokenIdErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT by token ID\n * Get NFT by token ID\n */\nexport const getV1NftsByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsByContractAddressByTokenIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsByContractAddressByTokenIdResponses,\n    GetV1NftsByContractAddressByTokenIdErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Force refresh collection metadata\n * Force refresh collection metadata for the specified contract (across multiple chains if provided)\n */\nexport const getV1NftsMetadataRefreshByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsMetadataRefreshByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsMetadataRefreshByContractAddressResponses,\n    GetV1NftsMetadataRefreshByContractAddressErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/metadata/refresh/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Force refresh token metadata\n * Force refresh token metadata for the specified contract and token ID (across multiple chains if provided)\n */\nexport const getV1NftsMetadataRefreshByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1NftsMetadataRefreshByContractAddressByTokenIdData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsMetadataRefreshByContractAddressByTokenIdResponses,\n    GetV1NftsMetadataRefreshByContractAddressByTokenIdErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/metadata/refresh/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Get wallet transactions\n * Get incoming and outgoing transactions for a wallet\n */\nexport const getV1WalletsByWalletAddressTransactions = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1WalletsByWalletAddressTransactionsData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1WalletsByWalletAddressTransactionsResponses,\n    GetV1WalletsByWalletAddressTransactionsErrors,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/wallets/{wallet_address}/transactions\",\n    ...options,\n  });\n};\n", "import type { Config } from \"./client/client/index.js\";\nimport { client } from \"./client/client.gen.js\";\n\nexport type InsightClientOptions = {\n  readonly clientId?: string;\n  readonly secretKey?: string;\n};\n\nexport function configure(\n  options: InsightClientOptions & { override?: Config },\n) {\n  client.setConfig({\n    headers: {\n      ...(options.clientId && { \"x-client-id\": options.clientId }),\n      ...(options.secretKey && { \"x-secret-key\": options.secretKey }),\n    },\n    ...(options.override ?? {}),\n  });\n}\n"],
  "mappings": "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",
  "names": ["joinedValues", "config", "request"]
}
